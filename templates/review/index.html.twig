{% extends 'base.html.twig' %}

{% block title %}Révision : {{ revision.flashcard.deck.title }}{% endblock %}

{% block body %}
<div class="max-w-xl mx-auto mt-10 p-4 bg-white shadow rounded">
    <h2 class="text-lg font-bold mb-4">Réviser une carte pour le deck : {{ revision.flashcard.deck.title }}</h2>

    <div class="bg-gray-100 p-4 rounded mb-4">
        {% if flashcard %}
            <p id="question-text">{{ flashcard.question }}</p>
        {% else %}
            <p class="text-red-500 font-bold">Aucune carte disponible pour le moment.</p>
        {% endif %}
    </div>

    {% if flashcard %}
    <form id="review-form" class="space-y-4" method="post" action="{{ path('app_review_session', { 'id': revision.id }) }}">
        <input type="hidden" name="response" id="response" value="">

        <div id="answer-section" class="hidden bg-gray-100 p-4 rounded mb-4">
            <p id="answer-text">{{ flashcard.answer }}</p>
        </div>

        <div id="buttons-section" class="hidden flex flex-col space-y-4">
            <button type="button" 
                class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition flex justify-between items-center"
                onclick="submitResponse('again')">
                Again
                <span class="text-gray-300 text-sm">({{ nextReviewIntervals.again }})</span>
            </button>
            <button type="button" 
                class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition flex justify-between items-center"
                onclick="submitResponse('hard')">
                Hard
                <span class="text-gray-300 text-sm">({{ nextReviewIntervals.hard }})</span>
            </button>
            <button type="button" 
                class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition flex justify-between items-center"
                onclick="submitResponse('good')">
                Good
                <span class="text-gray-300 text-sm">({{ nextReviewIntervals.good }})</span>
            </button>
            <button type="button" 
                class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition flex justify-between items-center"
                onclick="submitResponse('easy')">
                Easy
                <span class="text-gray-300 text-sm">({{ nextReviewIntervals.easy }})</span>
            </button>
        </div>

        <div class="flex justify-center">
            <button type="button" id="show-answer-button"
                class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 transition"
                onclick="showAnswer()">Afficher la réponse</button>
        </div>
    </form>
    {% endif %}
</div>

<script>
    function showAnswer() {
        // Affiche la section réponse et les boutons
        document.getElementById('answer-section').classList.remove('hidden');
        document.getElementById('buttons-section').classList.remove('hidden');

        // Cache le bouton "Afficher la réponse"
        document.getElementById('show-answer-button').classList.add('hidden');
    }

    async function submitResponse(response) {
        // Définit la réponse dans l'input caché
        const form = document.getElementById('review-form');
        const revisionId = "{{ revision.id }}";

        try {
            const res = await fetch(`/review/session/${revisionId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ response }),
            });

            if (!res.ok) {
                throw new Error('Erreur lors de l\'envoi de la réponse.');
            }

            const data = await res.json();

            if (data.finished) {
                // Redirige vers la vue de fin si toutes les cartes sont révisées
                window.location.href = `/review/finished/${revisionId}`;
            } else {
                // Met à jour la question et la réponse
                document.getElementById('question-text').innerText = data.flashcard.question;
                document.getElementById('answer-text').innerText = data.flashcard.answer;

                // Réinitialise les boutons
                document.getElementById('answer-section').classList.add('hidden');
                document.getElementById('buttons-section').classList.add('hidden');
                document.getElementById('show-answer-button').classList.remove('hidden');
            }
        } catch (error) {
            console.error(error);
            alert('Une erreur est survenue. Veuillez réessayer.');
        }
    }
</script>
{% endblock %}
