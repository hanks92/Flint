<!DOCTYPE html>
<html class="{{ app.user and app.user.theme == 'dark' ? 'dark' : '' }}">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
        
        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
            <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
        {% endblock %}
    </head>
    <body>
        {% block header %}
            {# Inclusion de la navbar combinée pour gérer l'affichage en fonction de l'état de connexion #}
            {% include "base/_navbar.html.twig" %}
        {% endblock %}
        
        {% block body %}
        {% endblock %}

        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
            <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
            <script>
                // Gestion du thème pour les visiteurs non connectés
                if (!document.documentElement.classList.contains('dark')) {
                    const savedTheme = localStorage.getItem('theme') || 'light';
                    document.documentElement.classList.add(savedTheme);
                }

                // Optionnel : Basculer entre les thèmes
                document.querySelector('#theme-toggle')?.addEventListener('click', () => {
                    const isDark = document.documentElement.classList.toggle('dark');
                    const theme = isDark ? 'dark' : 'light';
                    localStorage.setItem('theme', theme);

                    // Si l'utilisateur est connecté, sauvegarder le choix via une API
                    if ({{ app.user ? 'true' : 'false' }}) {
                        fetch('/api/user/theme', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ theme }),
                        }).then(response => {
                            if (!response.ok) {
                                console.error('Erreur lors de la mise à jour du thème.');
                            }
                        });
                    }
                });
            </script>
        {% endblock %}
    </body>
</html>
