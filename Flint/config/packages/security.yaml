security:
    # Gestion du hashage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Gestion du provider utilisateur
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # üîê Authentification API (JWT)
        login:
            pattern: ^/api/login_check
            stateless: true
            json_login:
                check_path: /api/login_check
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # üîê Firewall pour les autres routes API
        api:
            pattern: ^/api/
            stateless: true
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator

            # Gestion de la connexion
            form_login:
                login_path: app_login       # Page de connexion
                check_path: app_login       # Symfony g√®re cette route automatiquement
                default_target_path: app_home  # Redirige l'utilisateur apr√®s connexion

            # ‚¨áÔ∏è Redirection personnalis√©e si acc√®s refus√©
            entry_point: App\Security\LandingRedirectAuthenticationEntryPoint

            # Gestion de la d√©connexion
            logout:
                path: app_logout
                target: app_landing  # Redirection vers la page de d√©part

            # Gestion de la fonctionnalit√© "Se souvenir de moi"
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

            # switch_user (optionnel mais non activ√© par d√©faut)
            # switch_user: true

    # Gestion des acc√®s aux diff√©rentes parties du site
    access_control:
        # Routes accessibles sans connexion
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }     # üîê Permet l'auth API
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }        # üîê Prot√®ge les autres routes API
        - { path: ^/landing, roles: PUBLIC_ACCESS }             # Landing page
        - { path: ^/login, roles: PUBLIC_ACCESS }               # Connexion
        - { path: ^/register, roles: PUBLIC_ACCESS }            # Inscription
        - { path: ^/logout, roles: PUBLIC_ACCESS }              # D√©connexion

        # Routes prot√©g√©es : n√©cessitent d'√™tre connect√©
        - { path: ^/app, roles: ROLE_USER }
        - { path: ^/settings, roles: ROLE_USER }
        - { path: ^/profile, roles: ROLE_USER }

        # Catch-all pour toutes les autres routes
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Valeur minimale pour bcrypt
                time_cost: 3  # Valeur minimale pour argon
                memory_cost: 10  # Valeur minimale pour argon
